- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/vars.yml
  tasks:
  - name: Download Tower user data file
    get_url:
      url: https://raw.githubusercontent.com/mglantz/bicycle/master/provisioning/scripts/tower-prep.sh
      dest: /tmp/tower-prep.sh
      validate_certs: no
      force: yes
      
  - name: Ensure a security group with correct ingress/egress rules are in place
    ec2_group:
      name: "{{ ec2_security_group }}"
      description: Security Group for Bicycle server
      region: "{{ ec2_region }}"
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
      
  - name: Provision Ansible Tower
    ec2:
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      key_name: "{{ec2_key}}"
      region: "{{ ec2_region }}"
      group: "{{ ec2_security_group }}"
      instance_type: t2.medium
      image: "{{ ami_id }}"
      user_data: "{{ lookup('file', '/tmp/tower-prep.sh') }}"
      wait: true
      exact_count: 1
      count_tag:
        identity: tower
      instance_tags:
        identity: tower
    register: ec2large
    
  - name: Add Tower instance public IPs to host group
    add_host: hostname={{ item.public_ip }} groups=ec2large
    with_items: "{{ ec2large.tagged_instances }}"
    
  - name: Print IP address of Ansible Tower server
    debug:
      msg: "{{ groups['ec2large'] }}"
      
      
